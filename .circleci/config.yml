version: 2
jobs:
  test:
    docker:
      - image: cimg/node:18.16.0
    steps:
      - add_ssh_keys:
          fingerprints:
            - "68:4b:af:b0:a6:5e:d6:59:a1:ee:bf:12:36:9d:7d:fc"
      - checkout
      - run: yarn install --frozen-lockfile
      - run: yarn bootstrap
      - run: yarn build
      - run: yarn lint
      - run: yarn test
  pre_release:
    docker:
      - image: cimg/node:18.16.0
    steps:
      - add_ssh_keys:
          fingerprints:
            - "68:4b:af:b0:a6:5e:d6:59:a1:ee:bf:12:36:9d:7d:fc"
      - checkout
      - run: yarn install --frozen-lockfile
      - run: yarn bootstrap
      - run: yarn build
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc
      - run: export SHA=$(git rev-parse --short HEAD) && npm run publish -- prerelease --yes --preid pre-$SHA --message "%s [skip ci]" --no-git-tag-version --no-push --dist-tag canary
  dev_release:
    docker:
      - image: cimg/node:18.16.0
    steps:
      - add_ssh_keys:
          fingerprints:
            - "68:4b:af:b0:a6:5e:d6:59:a1:ee:bf:12:36:9d:7d:fc"
      - checkout
      - run: yarn install --frozen-lockfile
      - run: yarn bootstrap
      - run: yarn build
      - run: git config --global user.email "$GIT_AUTHOR_EMAIL"
      - run: git config --global user.name "$GIT_AUTHOR_NAME"
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc
      - run: npm run publish -- --yes --force-publish --npm-tag beta --message "%s [skip ci]"
  prod_release:
    docker:
      - image: cimg/node:18.16.0
    steps:
      - add_ssh_keys:
          fingerprints:
            - "68:4b:af:b0:a6:5e:d6:59:a1:ee:bf:12:36:9d:7d:fc"
      - checkout
      - run: yarn install --frozen-lockfile
      - run: git config --global user.email "$GIT_AUTHOR_EMAIL"
      - run: git config --global user.name "$GIT_AUTHOR_NAME"
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc
      - run: npx lerna exec --no-bail --no-private --no-sort --stream -- '[ -n "$(npm v . dist-tags.beta)" ] && npm dist-tag add ${LERNA_PACKAGE_NAME}@$(npm v . dist-tags.beta) latest'
workflows:
  version: 2
  do_build:
    jobs:
      - test:
          filters:
            branches:
              ignore:
                - main
      # - pre_release:
      #     context: public_package_publish
      #     filters:
      #       branches:
      #         only:
      #           - /prerelease\/.*/
      # - dev_release:
      #     requires:
      #       - test
      #     context: public_package_publish
      #     filters:
      #       branches:
      #         only:
      #           - dev
      # - prod_release:
      #     context: public_package_publish
      #     filters:
      #       branches:
      #         only:
      #           - main